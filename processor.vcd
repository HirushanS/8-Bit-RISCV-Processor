$date
	Thu Jan 23 06:58:51 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module processor_tb $end
$var wire 8 ! result [7:0] $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 3 $ reg_addr [2:0] $end
$var wire 2 % opcode [1:0] $end
$var wire 3 & mem_addr [2:0] $end
$var reg 8 ' instruction [7:0] $end
$var reg 3 ( pc [2:0] $end
$var reg 8 ) result [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 * i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 + i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 , i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ,
bx +
b1000 *
b0 )
b0 (
bx '
bx &
bx %
bx $
1#
0"
b0 !
$end
#5
b1000 *
1"
#10
b0 %
b0 $
b1 &
0"
b1 '
0#
#15
b1 (
b1011010 !
b1011010 )
1"
#20
b1 $
b10 &
0"
b1010 '
#25
b10 (
b111100 !
b111100 )
1"
#30
b10 %
b10 $
b0 &
0"
b10010000 '
#35
b11 (
b1011010 !
b1011010 )
1"
#40
b1 &
0"
b10010001 '
#45
b100 (
b10010110 !
b10010110 )
1"
#50
b1 %
b11 &
0"
b1010011 '
#55
b101 (
1"
#60
b11 %
b11 $
b1 &
0"
b11011001 '
#65
b110 (
b11000100 !
b11000100 )
1"
#70
0"
b1000 ,
b1000 +
#75
b111 (
b10001000 !
b10001000 )
1"
#80
0"
